<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.5</version>
  </parent>
  <groupId>team.microchad</groupId>
  <artifactId>ms-tula</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>ms-tula</name>
  <properties>
    <!-- external artifacts -->
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <maven-openapi-generator-plugin.version>6.2.1</maven-openapi-generator-plugin.version>
    <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>3.3.0</maven-dependency-plugin.version>
    <maven-checkstyle-plugin.version>3.2.0</maven-checkstyle-plugin.version>
    <jib-maven-plugin.version>3.3.1</jib-maven-plugin.version>
    <spring-boot.version>2.7.5</spring-boot.version>
    <spring-cloud-dependencies.version>2021.0.2</spring-cloud-dependencies.version>
    <spring-cloud-starter-feign.version>2.1.0.RELEASE</spring-cloud-starter-feign.version>
    <springdoc-openapi-ui.version>1.6.13</springdoc-openapi-ui.version>
    <swagger-parser-v3.version>2.1.5</swagger-parser-v3.version>
    <swagger-annotations.version>2.2.4</swagger-annotations.version>
    <lombok.version>1.18.24</lombok.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <mapstruct.version>1.5.3.Final</mapstruct.version>
    <jackson-databind-nullable.version>0.2.3</jackson-databind-nullable.version>
    <postgresql.version>42.5.0</postgresql.version>
    <junit-jupiter-testcontainers.version>1.18.0</junit-jupiter-testcontainers.version>
    <postgres-testcontainers.version>1.19.0</postgres-testcontainers.version>
    <kafka-testcontainers.version>1.19.0</kafka-testcontainers.version>
    <hibernate-types-52.version>2.20.0</hibernate-types-52.version>
    <micrometer-registry-prometheus.version>1.9.5</micrometer-registry-prometheus.version>
    <image.registry.path>localhost:5000</image.registry.path>
    <jacoco.version>0.8.9</jacoco.version>
    <json-patch.version>1.13</json-patch.version>
    <avro.version>1.11.2</avro.version>
    <datafaker.version>1.7.0</datafaker.version>
    <kafka-schema-registry-client.version>7.3.3</kafka-schema-registry-client.version>
    <kafka-avro-serializer.version>7.3.3</kafka-avro-serializer.version>
    <opentelemetry-javaagent.version>1.19.0</opentelemetry-javaagent.version>
  </properties>
  <repositories>
    <repository>
      <id>confluent</id>
      <name>confluent</name>
      <url>https://packages.confluent.io/maven/</url>
    </repository>
  </repositories>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- necessary for Java 9+ -->
        <groupId>org.apache.tomcat</groupId>
        <artifactId>annotations-api</artifactId>
        <version>6.0.53</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>5.2.5</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>5.2.5</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-openfeign</artifactId>
        <version>${spring-cloud-starter-feign.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud-dependencies.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-ui</artifactId>
        <version>${springdoc-openapi-ui.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.parser.v3</groupId>
        <artifactId>swagger-parser-v3</artifactId>
        <version>${swagger-parser-v3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openapitools</groupId>
        <artifactId>jackson-databind-nullable</artifactId>
        <version>${jackson-databind-nullable.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-mapstruct-binding</artifactId>
        <version>${lombok-mapstruct-binding.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>
      <dependency>
        <groupId>com.vladmihalcea</groupId>
        <artifactId>hibernate-types-52</artifactId>
        <version>${hibernate-types-52.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-prometheus</artifactId>
        <version>${micrometer-registry-prometheus.version}</version>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit-jupiter-testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgres-testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>kafka</artifactId>
        <version>${kafka-testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>net.datafaker</groupId>
        <artifactId>datafaker</artifactId>
        <scope>test</scope>
        <version>${datafaker.version}</version>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-schema-registry-client</artifactId>
        <version>${kafka-schema-registry-client.version}</version>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-avro-serializer</artifactId>
        <version>${kafka-avro-serializer.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.java-json-tools</groupId>
        <artifactId>json-patch</artifactId>
        <version>${json-patch.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <modules>
    <module>ms-tula-api</module>
    <module>ms-tula-db</module>
    <module>ms-tula-impl</module>
  </modules>
</project>
